<section class="carrousel__section">
    <div class="carousel">
      <button class="btn-arrow btn-arrow-left">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="icon"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M10 19l-7-7m0 0l7-7m-7 7h18"
          />
        </svg>
      </button>
      <button class="btn-arrow btn-arrow-right">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="icon"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M14 5l7 7m0 0l-7 7m7-7H3"
          />
        </svg>
      </button>
      <div class="inner">
        <ul class="container">
          <li class="slide slide-1">
            <img src="images/banner.jpg" alt="">
          </li>
          <li class="slide slide-2">
            <img src="images/banner2.jpg" alt="">
          </li>
          <li class="slide slide-3">
            <img src="images/banner3.jpg" alt="">
          </li>
        </ul>
      </div>
      <div class="dots"></div>
    </div>
    <script> "use strict";
        const arrowBtnLeft = document.querySelector(".btn-arrow-left");
        const arrowBtnRight = document.querySelector(".btn-arrow-right");
  
        const slides = document.querySelectorAll(".slide");
        const dotsContainer = document.querySelector(".dots");
  
        let curSlide = 0;
  
        // functions
        const goToSlide = (slide) => {
          slides.forEach((s, i) => {
            s.style.transform = `translateX(${100 * (i - slide)}%)`;
          });
        };
  
        const nextSlide = function () {
          curSlide === slides.length - 1 ? (curSlide = 0) : curSlide++;
          goToSlide(curSlide);
          activateDot(curSlide);
        };
  
        const prevSlide = function () {
          curSlide === 0 ? (curSlide = slides.length - 1) : curSlide--;
          goToSlide(curSlide);
          activateDot(curSlide);
        };
  
        const createDots = () => {
          slides.forEach((_, i) =>
            dotsContainer.insertAdjacentHTML(
              "beforeend",
              `<button class='dot' data-slide='${i}'></button>`
            )
          );
        };
  
        const activateDot = (slide) => {
          document
            .querySelectorAll(".dot")
            .forEach((dot) => dot.classList.remove("dot--active"));
          document
            .querySelectorAll(`.dot[data-slide="${slide}"]`)
            .forEach((dot) => dot.classList.add("dot--active"));
        };
  
        // inital
        const init = () => {
          goToSlide(0);
          createDots();
          activateDot(0);
        };
        init();
  
        // event listeners
        arrowBtnLeft.addEventListener("click", prevSlide);
        arrowBtnRight.addEventListener("click", nextSlide);
  
        dotsContainer.addEventListener("click", function (e) {
          // if needed to work only on dots and not on dot container
          if (e.target.classList.contains("dot")) {
            const { slide } = e.target.dataset;
            goToSlide(slide);
            activateDot(slide);
          }
        });</script>
  </section>
